@model PagedList.IPagedList<SecondHandStoreApp.Models.StoreItem>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "ListStoreItems";
}


<div class="container">

    <div class="col-md-12">
        <ul class="breadcrumb">
            <li>
                <a href="~/Home/Index">Home</a>
            </li>
            <li>
                <a href="~/Admin/Index">Admin</a>
            </li>
            <li>
                List Store Items
            </li>

        </ul>

    </div>
</div>

<div class="container-fluid">
    <div class="col-md-12">
        <div class="box">
            @using (Html.BeginForm("ListStoreItems", "Admin", FormMethod.Get))
            {
                <div class="col-md-10">
                    Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)   &nbsp;     
                    
                    <label class="radio-inline">
                        <input type="radio"
                               name="sortOrder"
                               value=""
                               @(ViewBag.CurrentSort == "" ? "checked" : "") /> All
                    </label>  &nbsp;
                        
                    <label class="radio-inline">
                        <input type="radio"
                               name="sortOrder"
                               value="NotAvaible"
                               @(ViewBag.CurrentSort == "NotAvaible" ? "checked" : "") /> Not Avaible
                    </label>  &nbsp;

                        <label class="radio-inline">                         
                            <input type="radio"
                                   name="sortOrder"
                                   value="NotApproved"
                                   @(ViewBag.CurrentSort == "NotApproved" ? "checked" : "") /> Not Approved
                        </label> &nbsp; 
                   
                        <input type="submit" value="Filter" class="btn btn-success " /> <br />

</div>
            }
            <br /><br /><br />                
            <table class="table">
                <tr>
                    <th>
                        Seller Name
                    </th>
                    <th>
                        Is avaible
                    </th>
                    <th>
                        Item Name
                    </th>
                    <th>
                        Is Approved
                    </th>
                    <th>
                        Date Created
                    </th>
                    <th>
                       Price
                    </th>
                    <th>
                       Item Gender
                    </th>
                    <th>
                        Category
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        Condition
                    </th>
                    <th>
                        Brand
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.seller.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsAvailable)
                        </td>
                        <td>
                            @Html.ActionLink(item.ItemName, "DetailsItem", new { id = item.ID })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsApproved)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateCreated)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.itemGender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.category)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.condition)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Brand)
                        </td>
                        <td>
                            @Html.ActionLink("Details", "DetailsItem", new { id = item.ID, returnUrl = HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn btn-info btn-sm" }) |
                            
                            @if (item.IsAvailable == true)
                            {
                              @Html.ActionLink("DisableItem", "DisableItem", new { id = item.ID, returnUrl = HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn btn-warning btn-sm" })
                            }
                            else
                            {
                                @Html.ActionLink("EnableItem", "EnableItem", new { id = item.ID ,returnUrl = HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn btn-default btn-sm" }) <span> |</span>

                                 @Html.ActionLink("*Delete*", "DeleteReal", new { id = item.ID, returnUrl = HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn btn-danger btn-sm" }) 
                            }


                        </td>
                    </tr>
                }

            </table>

            <br />
            <div class="text-center">


                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager(Model, page => Url.Action("ListStoreItems", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
            </div>
        </div>
    </div>
</div>


@section Scripts{
    
    <script>
        $(function () {
            $("#mainContainer").removeClass("container");
            $("#mainContainer").addClass("container-fluid");
        });
    </script>
    
    
    
    }
